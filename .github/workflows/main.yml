name: main

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: setup abuild.conf
      shell: bash
      env:
        PACKAGER: ${{ secrets.PACKAGER }}
        KEY_NAME: ${{ secrets.KEY_NAME }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      run: |
        echo "PACKAGER=\"$PACKAGER\"" >> builder.docker/abuildconf/abuild.conf
        echo "PACKAGER_PRIVKEY=\"/home/packager/.abuild/$KEY_NAME.rsa\"" >> builder.docker/abuildconf/abuild.conf
        echo "$PRIVATE_KEY" > "builder.docker/abuildconf/$KEY_NAME.rsa"
        echo "$PUBLIC_KEY" > "builder.docker/abuildconf/$KEY_NAME.rsa.pub"
        chmod 600 "builder.docker/abuildconf/$KEY_NAME.rsa"
    - name: build image
      run: docker-compose build
    - name: boot builder
      run: docker-compose up -d builder
    - name: cache
      uses: actions/cache@v2
      with:
        path: ./cache
        key: ${{ runner.os }}-buildcache-${{ hashFiles('**/APKBUILD') }}
        restore-keys: ${{ runner.os }}-buildcache-
    - name: import cache
      run: docker-compose up cache-import
    - name: import pre-built
      run: |
        curl -sLO https://github.com/wtnb75/alpine-pkg/archive/refs/heads/gh-pages.zip || exit 0
        unzip gh-pages.zip
        rm -rf output
        mv alpine-pkg-gh-pages output
        ls -lR output
        docker-compose up import
        docker-compose exec -T builder ls -lR /home/packager/packages
    - name: build apk
      run: docker-compose exec -T builder sh /build/build-all.sh
    - name: get result
      run: |
        rm -rf output
        mkdir -p -m 0777 output
        env c_gid=$(id -g) c_uid=$(id -u) docker-compose up export
        ls -lR output
    - name: export cache
      run: |
        mkdir -p -m 0777 cache
        docker-compose up cache-export
        ls -lR cache
    - name: shutdown builder
      run: docker-compose down -v
    - name: build index
      shell: bash
      env:
        PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
        KEY_NAME: ${{ secrets.KEY_NAME }}
      run: |
        pip install dirindex
        cd output
        find . -name index.html -delete
        echo "$PUBLIC_KEY" > "$KEY_NAME.rsa.pub"
        dirindex make --template apache --recursive .
        cd -
    - name: push to gh-pages
      uses: peaceiris/actions-gh-pages@v2
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./output
      with:
        forceOrphan: true
